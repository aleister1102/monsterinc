<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ .ReportTitle }}</title>
    {{if .FaviconBase64}}
        <link rel="icon" type="image/png" href="data:image/png;base64,{{.FaviconBase64}}">
    {{end}}

    <!-- Bootstrap CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    
    <!-- DataTables CSS CDN -->
    {{if .EnableDataTables}}
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/2.0.3/css/dataTables.bootstrap5.min.css">
    {{end}}

    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        /* Custom CSS for better styling */
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .navbar {
            box-shadow: 0 2px 4px rgba(0,0,0,.1);
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,.1);
            transition: transform 0.2s ease-in-out;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 16px rgba(0,0,0,.15);
        }

        /* Status Code Styling */
        .status-200, .status-201, .status-202, .status-204 {
            background-color: #d4edda !important;
            color: #155724 !important;
            font-weight: bold;
            padding: 4px 8px;
            border-radius: 6px;
        }

        .status-300, .status-301, .status-302, .status-304, .status-307, .status-308 {
            background-color: #fff3cd !important;
            color: #856404 !important;
            font-weight: bold;
            padding: 4px 8px;
            border-radius: 6px;
        }

        .status-400, .status-401, .status-403, .status-404, .status-405 {
            background-color: #f8d7da !important;
            color: #721c24 !important;
            font-weight: bold;
            padding: 4px 8px;
            border-radius: 6px;
        }

        .status-500, .status-502, .status-503, .status-504 {
            background-color: #f5c6cb !important;
            color: #491217 !important;
            font-weight: bold;
            padding: 4px 8px;
            border-radius: 6px;
        }

        /* Diff Status Styling */
        .diff-status-new {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white !important;
            padding: 3px 8px;
            border-radius: 12px;
            font-weight: 500;
            font-size: 0.7em;
            text-transform: uppercase;
            letter-spacing: 0.3px;
            box-shadow: 0 1px 3px rgba(40, 167, 69, 0.3);
            display: inline-block;
            line-height: 1.2;
            height: auto;
            vertical-align: middle;
        }

        .diff-status-old {
            background: linear-gradient(135deg, #dc3545, #e74c3c);
            color: white !important;
            padding: 3px 8px;
            border-radius: 12px;
            font-weight: 500;
            font-size: 0.7em;
            text-transform: uppercase;
            letter-spacing: 0.3px;
            box-shadow: 0 1px 3px rgba(220, 53, 69, 0.3);
            display: inline-block;
            line-height: 1.2;
            height: auto;
            vertical-align: middle;
        }

        .diff-status-existing {
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white !important;
            padding: 3px 8px;
            border-radius: 12px;
            font-weight: 500;
            font-size: 0.7em;
            text-transform: uppercase;
            letter-spacing: 0.3px;
            box-shadow: 0 1px 3px rgba(108, 117, 125, 0.3);
            display: inline-block;
            line-height: 1.2;
            height: auto;
            vertical-align: middle;
        }

        /* Table cell styling for consistent height */
        .table tbody td {
            padding: 12px;
            vertical-align: middle;
            border-bottom: 1px solid #f8f9fa;
            height: 60px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 200px;
        }

        /* Specific styling for different column types */
        .truncate-url {
            max-width: 200px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .truncate-title {
            max-width: 250px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .truncate-techs {
            max-width: 150px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        /* Technology tags should not wrap */
        .tech-tag {
            background: linear-gradient(135deg, #17a2b8, #138496);
            color: white;
            padding: 2px 6px;
            border-radius: 8px;
            font-size: 0.7em;
            margin: 1px;
            display: inline-block;
            white-space: nowrap;
        }

        /* Ensure buttons don't affect row height */
        .view-details-btn {
            padding: 4px 8px;
            font-size: 0.8em;
            line-height: 1.2;
        }

        /* Hide less important columns on smaller screens */
        @media (max-width: 1600px) {
            .hide-on-large {
                display: none;
            }
            /* Adjust column widths when Web Server column is hidden */
            .table th:nth-child(1), .table td:nth-child(1) { width: 22%; } /* Input URL */
            .table th:nth-child(2), .table td:nth-child(2) { width: 22%; } /* Final URL */
            .table th:nth-child(5), .table td:nth-child(5) { width: 18%; } /* Title */
            .table th:nth-child(6), .table td:nth-child(6) { width: 14%; text-align: center; } /* Technologies */
            .table th:nth-child(8), .table td:nth-child(8) { width: 14%; text-align: center; } /* Content Type */
        }

        @media (max-width: 1400px) {
            .hide-on-medium {
                display: none;
            }
            /* Adjust column widths when Technologies column is hidden */
            .table th:nth-child(1), .table td:nth-child(1) { width: 25%; } /* Input URL */
            .table th:nth-child(2), .table td:nth-child(2) { width: 25%; } /* Final URL */
            .table th:nth-child(5), .table td:nth-child(5) { width: 22%; } /* Title */
            .table th:nth-child(8), .table td:nth-child(8) { width: 18%; text-align: center; } /* Content Type */
        }

        @media (max-width: 1200px) {
            .hide-on-small {
                display: none;
            }
            /* Adjust column widths when Title column is hidden */
            .table th:nth-child(1), .table td:nth-child(1) { width: 30%; } /* Input URL */
            .table th:nth-child(2), .table td:nth-child(2) { width: 30%; } /* Final URL */
            .table th:nth-child(8), .table td:nth-child(8) { width: 25%; text-align: center; } /* Content Type */
        }

        @media (max-width: 992px) {
            .hide-on-mobile {
                display: none;
            }
            /* Adjust column widths when Diff Status and Content Type columns are hidden */
            .table th:nth-child(1), .table td:nth-child(1) { width: 40%; } /* Input URL */
            .table th:nth-child(2), .table td:nth-child(2) { width: 40%; } /* Final URL */
            .table th:nth-child(4), .table td:nth-child(4) { width: 12%; text-align: center; } /* Status */
            .table th:nth-child(9), .table td:nth-child(9) { width: 8%; text-align: center; }  /* Details */
        }

        /* Search and Filter Styling */
        .search-container {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,.1);
            margin-bottom: 20px;
        }

        .search-input {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 12px 16px;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .search-input:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .filter-select {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 10px 12px;
            padding-right: 2.5rem !important; /* Extra padding for dropdown arrow */
            font-size: 14px;
            transition: border-color 0.3s ease;
            background-position: right 0.75rem center !important; /* Position dropdown arrow properly */
        }

        .filter-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        /* Table Styling */
        .table {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,.1);
            table-layout: fixed;
            width: 100%;
        }

        .table thead th {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
            border: none;
            padding: 16px 12px;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85em;
            letter-spacing: 0.5px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            text-align: center;
            vertical-align: middle;
        }

        /* Column width distribution */
        .table th:nth-child(1), .table td:nth-child(1) { width: 20%; } /* Input URL */
        .table th:nth-child(2), .table td:nth-child(2) { width: 20%; } /* Final URL */
        .table th:nth-child(3), .table td:nth-child(3) { width: 8%; text-align: center; }  /* Diff Status */
        .table th:nth-child(4), .table td:nth-child(4) { width: 8%; text-align: center; }  /* Status */
        .table th:nth-child(5), .table td:nth-child(5) { width: 15%; } /* Title */
        .table th:nth-child(6), .table td:nth-child(6) { width: 12%; text-align: center; } /* Technologies */
        .table th:nth-child(7), .table td:nth-child(7) { width: 10%; text-align: center; } /* Web Server */
        .table th:nth-child(8), .table td:nth-child(8) { width: 12%; text-align: center; } /* Content Type */
        .table th:nth-child(9), .table td:nth-child(9) { width: 8%; text-align: center; }  /* Details */

        .table tbody tr:hover {
            background-color: #f8f9fa;
        }

        /* URL Styling */
        .truncate-url a {
            color: #007bff;
            text-decoration: none;
            font-weight: 500;
            display: block;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .truncate-url a:hover {
            color: #0056b3;
            text-decoration: underline;
        }

        /* Secret Detection Section */
        .secret-section {
            background: white;
            border-radius: 12px;
            padding: 24px;
            margin-top: 30px;
            box-shadow: 0 2px 8px rgba(0,0,0,.1);
        }

        .secret-stats-card {
            border-radius: 12px;
            transition: transform 0.2s ease;
        }

        .secret-stats-card:hover {
            transform: translateY(-2px);
        }

        /* Secret findings table styling */
        #secretFindingsTable thead th {
            text-align: center;
            vertical-align: middle;
        }

        #secretFindingsTable tbody td {
            vertical-align: middle;
        }

        /* Center specific columns in secret findings table */
        #secretFindingsTable th:nth-child(4), #secretFindingsTable td:nth-child(4) { text-align: center; } /* Severity */
        #secretFindingsTable th:nth-child(6), #secretFindingsTable td:nth-child(6) { text-align: center; } /* Line */
        #secretFindingsTable th:nth-child(7), #secretFindingsTable td:nth-child(7) { text-align: center; } /* Tool */
        #secretFindingsTable th:nth-child(8), #secretFindingsTable td:nth-child(8) { text-align: center; } /* Timestamp */

        /* Button Styling */
        .btn {
            border-radius: 8px;
            font-weight: 500;
            padding: 6px 12px;
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0,0,0,.2);
        }

        /* Badge Styling */
        .badge {
            padding: 4px 8px;
            font-size: 0.75em;
            border-radius: 6px;
        }

        /* Code Styling */
        code {
            padding: 2px 6px;
            font-size: 0.85em;
            border-radius: 4px;
        }

        /* Results Counter */
        .results-counter {
            background: white;
            padding: 12px 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,.1);
            font-weight: 600;
            color: #495057;
        }

        /* Embedded Custom CSS */
        {{if .CustomCSS}}{{.CustomCSS}}{{end}}

        /* Specific styling for Items per page select */
        #itemsPerPageSelect {
            min-width: 80px !important; /* Ensure minimum width for the select box */
        }

        /* Grouped Secret Findings Styles */
        .secret-group-header {
            background: linear-gradient(135deg, #f8d7da, #f5c6cb);
            border: 1px solid #f1b0b7;
            border-radius: 8px;
            margin-bottom: 2px;
            transition: all 0.3s ease;
        }

        .secret-group-header:hover {
            background: linear-gradient(135deg, #f5c6cb, #f1b0b7);
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(220, 53, 69, 0.15);
        }

        .secret-group-header .btn {
            width: 100%;
            text-align: left;
            padding: 15px 20px;
            border: none;
            background: transparent;
            color: #721c24;
            font-weight: 600;
            text-decoration: none;
        }

        .secret-group-header .btn:focus {
            box-shadow: none;
        }

        .secret-group-url {
            font-family: 'Courier New', monospace;
            font-size: 0.9em;
            word-break: break-all;
        }

        .secret-group-count {
            background: #dc3545;
            color: white;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8em;
            margin-left: 10px;
        }

        .secret-group-severity-badges {
            display: inline-flex;
            gap: 5px;
            margin-left: 10px;
        }

        .secret-group-severity-badges .badge {
            font-size: 0.7em;
            padding: 2px 6px;
        }

        .secret-findings-table-container {
            background: white;
            border: 1px solid #dee2e6;
            border-top: none;
            border-radius: 0 0 8px 8px;
        }

        .secret-findings-table {
            margin-bottom: 0;
        }

        .secret-findings-table thead th {
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white;
            border: none;
            padding: 12px;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8em;
            letter-spacing: 0.5px;
        }

        .secret-findings-table tbody td {
            padding: 10px 12px;
            vertical-align: middle;
            border-bottom: 1px solid #f8f9fa;
        }

        .collapse-icon {
            transition: transform 0.3s ease;
        }

        .collapsed .collapse-icon {
            transform: rotate(-90deg);
        }

        /* Secret text display with ellipsis */
        .secret-text-cell {
            max-width: 200px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            position: relative;
            cursor: help;
        }

        .secret-text-display {
            max-width: 150px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            display: inline-block;
            cursor: help;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
            background-color: #f8f9fa;
            padding: 2px 6px;
            border-radius: 3px;
            border: 1px solid #dee2e6;
            transition: background-color 0.2s ease;
        }

        .secret-text-display:hover {
            background-color: #e9ecef;
            border-color: #adb5bd;
        }

        .dark-theme .secret-text-display {
            background-color: #343a40;
            color: #f8f9fa;
            border-color: #495057;
        }

        .dark-theme .secret-text-display:hover {
            background-color: #495057;
            border-color: #6c757d;
        }

        /* Tooltip for full secret display */
        .secret-tooltip {
            position: absolute;
            background: #000;
            color: #fff;
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 0.8em;
            white-space: pre-wrap;
            word-break: break-all;
            max-width: 400px;
            z-index: 1050;
            box-shadow: 0 4px 8px rgba(0,0,0,0.3);
            display: none;
            font-family: 'Courier New', monospace;
        }

        .secret-tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: #000 transparent transparent transparent;
        }
    </style>
</head>
<body class="{{.Theme}}-theme">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-4">
        <div class="container-fluid">
            <a class="navbar-brand fw-bold" href="#">
                <i class="fas fa-shield-alt me-2"></i>{{ .ReportTitle }}
            </a>
            <div class="collapse navbar-collapse">
                <span class="navbar-text ms-auto">
                    <i class="fas fa-clock me-1"></i>Generated at: {{ .GeneratedAt }}
                </span>
            </div>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <!-- Main Content Area -->
            <main class="col-md-12 px-md-4">
                <!-- Search and Filter Section -->
                <div class="search-container">
                    <div class="row align-items-center">
                    <div class="col-md-3">
                            <div class="input-group">
                                <span class="input-group-text bg-light border-end-0">
                                    <i class="fas fa-search text-muted"></i>
                                </span>
                                <input type="text" id="globalSearchInput" class="form-control search-input border-start-0" placeholder="Search all fields...">
                            </div>
                    </div>
                    <div class="col-md-2">
                            <select id="rootURLFilter" class="form-select filter-select">
                            <option value="">Filter by Root URL...</option>
                            {{range .UniqueRootTargets}}
                            <option value="{{.}}">{{.}}</option>
                            {{end}}
                        </select>
                    </div>
                    <div class="col-md-2">
                            <select id="statusCodeFilter" class="form-select filter-select">
                            <option value="">Filter by Status Code...</option>
                            {{range .UniqueStatusCodes}}
                            <option value="{{.}}">{{.}}</option>
                            {{end}}
                        </select>
                    </div>
                    <div class="col-md-2">
                            <select id="contentTypeFilter" class="form-select filter-select">
                            <option value="">Filter by Content Type...</option>
                            {{range .UniqueContentTypes}}
                            <option value="{{.}}">{{.}}</option>
                            {{end}}
                        </select>
                    </div>
                    <div class="col-md-2">
                            <select id="urlStatusFilter" class="form-select filter-select">
                            <option value="">Filter by Diff Status...</option>
                            <option value="new">New</option>
                            <option value="old">Old</option>
                            <option value="existing">Existing</option>
                        </select>
                    </div>
                        <div class="col-md-1">
                            <button id="clearAllFiltersBtn" class="btn btn-outline-danger w-100">
                                <i class="fas fa-times me-1"></i>Clear
                            </button>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-3">
                            <input type="text" id="techFilterInput" class="form-control search-input" placeholder='{{index .FilterPlaceholders "techSearch"}}'>
                        </div>
                        <div class="col-md-6"></div>
                        <div class="col-md-3 text-end">
                            <div class="results-counter">
                                <i class="fas fa-chart-bar me-2"></i>
                                <span id="resultsCountInfo">Total: {{.TotalResults}} (Success: {{.SuccessResults}}, Failed: {{.FailedResults}})</span>
                            </div>
                    </div>
                    </div>
                </div>

                {{if .ErrorMessage}}
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Error generating report:</strong> {{.ErrorMessage}}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
                {{end}}

                <!-- Results Table -->
                <div class="card">
                    <div class="card-body p-0">
                        <table id="resultsTable" class="table table-hover {{if .EnableDataTables}}dataTable{{end}}" style="width:100%">
                    <thead>
                        <tr>
                                    <th class="sortable" data-sort-key="InputURL"><i class="fas fa-link me-1"></i>Input URL</th>
                                    <th class="sortable" data-sort-key="FinalURL"><i class="fas fa-external-link-alt me-1"></i>Final URL</th>
                                    <th class="sortable hide-on-mobile" data-sort-key="DiffStatus"><i class="fas fa-code-branch me-1"></i>Diff Status</th>
                                    <th class="sortable" data-sort-key="StatusCode"><i class="fas fa-signal me-1"></i>Status</th>
                                    <th class="sortable hide-on-small" data-sort-key="Title"><i class="fas fa-heading me-1"></i>Title</th>
                                    <th class="hide-on-medium"><i class="fas fa-cogs me-1"></i>Technologies</th>
                                    <th class="sortable hide-on-large" data-sort-key="WebServer"><i class="fas fa-server me-1"></i>Web Server</th>
                                    <th class="sortable hide-on-mobile" data-sort-key="ContentType"><i class="fas fa-file-code me-1"></i>Content Type</th>
                                    <th><i class="fas fa-info-circle me-1"></i>Details</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{if not .ProbeResults}}
                        <tr>
                                    <td colspan="8" class="text-center py-5">
                                        <i class="fas fa-search fa-3x text-muted mb-3"></i>
                                        <p class="text-muted">No results to display.</p>
                                    </td>
                        </tr>
                        {{end}}
                        {{range $idx, $pr := .ProbeResults}}
                        <tr class="{{if not .IsSuccess}}table-danger{{else if .StatusCode}}status-{{.StatusCode}}{{end}}" data-result-index="{{$idx}}">
                            <td class="truncate-url" title="{{.InputURL}}"><a href="{{.InputURL}}" target="_blank">{{.InputURL}}</a></td>
                            <td class="truncate-url" title="{{.FinalURL}}"><a href="{{.FinalURL}}" target="_blank">{{.FinalURL}}</a></td>
                                    <td class="hide-on-mobile"><span class="diff-status-{{.URLStatus | ToLower}}">{{if .URLStatus}}{{.URLStatus}}{{else}}-{{end}}</span></td>
                                    <td><span class="{{if .StatusCode}}status-{{.StatusCode}}{{end}}">{{if .StatusCode}}{{.StatusCode}}{{else if .Error}}ERR{{else}}-{{end}}</span></td>
                            <td class="truncate-title hide-on-small" title="{{.Title}}">{{if .Title}}{{.Title}}{{else}}-{{end}}</td>
                                    <td class="truncate-techs hide-on-medium" title="{{joinStrings .Technologies ", "}}">
                                        {{range .Technologies}}
                                        <span class="tech-tag">{{.}}</span>
                                        {{end}}
                                    </td>
                            <td class="hide-on-large">{{if .WebServer}}{{.WebServer}}{{else}}-{{end}}</td>
                            <td class="hide-on-mobile">{{if .ContentType}}{{.ContentType}}{{else}}-{{end}}</td>
                                    <td><button class="btn btn-sm btn-outline-primary view-details-btn" data-bs-toggle="modal" data-bs-target="#detailsModal">
                                        <i class="fas fa-eye me-1"></i>View
                                    </button></td>
                        </tr>
                        {{end}}
                    </tbody>
                </table>
                    </div>
                </div>

                {{/* Secret Detection Findings Section */}}
                {{if .SecretFindings}}
                <div class="secret-section">
                    <div class="row">
                        <div class="col-12">
                            <h3 class="mb-4">
                                <i class="fas fa-shield-alt text-warning me-2"></i>Secret Detection Findings
                                <span class="badge bg-danger ms-2">{{.SecretStats.TotalFindings}}</span>
                            </h3>
                            
                            {{/* Secret Statistics */}}
                            <div class="row mb-4">
                                <div class="col-md-3">
                                    <div class="card border-danger secret-stats-card">
                                        <div class="card-body text-center">
                                            <i class="fas fa-exclamation-triangle fa-2x text-danger mb-2"></i>
                                            <h5 class="card-title text-danger mb-1">High/Critical</h5>
                                            <h2 class="text-danger mb-0">{{.SecretStats.HighSeverity}}</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card border-warning secret-stats-card">
                                        <div class="card-body text-center">
                                            <i class="fas fa-exclamation-circle fa-2x text-warning mb-2"></i>
                                            <h5 class="card-title text-warning mb-1">Medium</h5>
                                            <h2 class="text-warning mb-0">{{.SecretStats.MediumSeverity}}</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card border-info secret-stats-card">
                                        <div class="card-body text-center">
                                            <i class="fas fa-info-circle fa-2x text-info mb-2"></i>
                                            <h5 class="card-title text-info mb-1">Low</h5>
                                            <h2 class="text-info mb-0">{{.SecretStats.LowSeverity}}</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card border-secondary secret-stats-card">
                                        <div class="card-body text-center">
                                            <i class="fas fa-question-circle fa-2x text-secondary mb-2"></i>
                                            <h5 class="card-title text-secondary mb-1">Unknown</h5>
                                            <h2 class="text-secondary mb-0">{{.SecretStats.UnknownSeverity}}</h2>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            {{/* Grouped Secret Findings */}}
                            <div id="secretFindingsAccordion">
                                <!-- This will be populated by JavaScript -->
                            </div>
                        </div>
                    </div>
                </div>
                {{end}}

                <!-- Pagination and Controls -->
                <div class="row mt-4">
                    <div class="col-md-6">
                        <div id="paginationControls" class="d-flex align-items-center">
                            {{/* Pagination controls will be dynamically generated by JS */}}
                        </div>
                    </div>
                     <div class="col-md-6 text-end">
                        <div class="d-flex align-items-center justify-content-end">
                            <label for="itemsPerPageSelect" class="form-label me-2 mb-0">Items per page:</label>
                            <select id="itemsPerPageSelect" class="form-select filter-select" style="width: auto;">
                            <option value="10" {{if eq .ItemsPerPage 10}}selected{{end}}>10</option>
                            <option value="25" {{if eq .ItemsPerPage 25}}selected{{end}}>25</option>
                            <option value="50" {{if eq .ItemsPerPage 50}}selected{{end}}>50</option>
                            <option value="100" {{if eq .ItemsPerPage 100}}selected{{end}}>100</option>
                        </select>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    {{/* Modal for details */}}
    <div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="detailsModalLabel">
                        <i class="fas fa-info-circle me-2"></i>Probe Details
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <pre id="modalDetailsContent" class="bg-light p-3 rounded"></pre>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer mt-5 py-4 bg-dark text-white">
        <div class="container text-center">
            <div class="row">
                <div class="col-md-12">
                    <i class="fas fa-shield-alt me-2"></i>
                    <span>MonsterInc Scan Report &copy; {{ .GeneratedAt }}</span>
                </div>
            </div>
        </div>
    </footer>

    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <!-- Bootstrap JS CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    
    {{if .EnableDataTables}}
    <!-- DataTables JS CDN -->
    <script src="https://cdn.datatables.net/2.0.3/js/dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.3/js/dataTables.bootstrap5.min.js"></script>
    {{end}}

    <script type="text/javascript">
        window.reportSettings = window.reportSettings || {};
        window.reportSettings.initialProbeResults = {{ .ProbeResultsJSON }};
        window.reportSettings.secretFindings = {{ .SecretFindingsJSON }};
        window.reportSettings.secretStats = {{ jsonMarshal .SecretStats }};
        // console.log("Data injected into window.reportSettings.initialProbeResults:", window.reportSettings.initialProbeResults);
    </script>

    <script>
        // Embedded Custom Report JS
        {{if .ReportJs}}{{.ReportJs}}{{end}}

        // Initialize Secret Findings Accordion after page load
        document.addEventListener('DOMContentLoaded', function() {
            if (window.reportSettings && window.reportSettings.secretFindings) {
                initializeSecretFindingsAccordion();
            }
        });

        function initializeSecretFindingsAccordion() {
            const secretFindings = window.reportSettings.secretFindings;
            if (!secretFindings || secretFindings.length === 0) {
                return;
            }

            // Debug: Log the first finding to see the structure
            console.log('Secret findings structure:', secretFindings[0]);

            // Group findings by source URL
            const groupedFindings = {};
            secretFindings.forEach(finding => {
                // Use snake_case as defined in JSON tags
                const sourceURL = finding.source_url || finding.SourceURL || finding.sourceURL || 
                                 finding.source || finding.Source || 'Unknown Source';
                if (!groupedFindings[sourceURL]) {
                    groupedFindings[sourceURL] = [];
                }
                groupedFindings[sourceURL].push(finding);
            });

            // Debug: Log grouped findings
            console.log('Grouped findings:', groupedFindings);

            // Create accordion HTML
            const accordionContainer = document.getElementById('secretFindingsAccordion');
            if (!accordionContainer) return;

            let accordionHTML = '';
            let groupIndex = 0;

            Object.keys(groupedFindings).sort().forEach(sourceURL => {
                const findings = groupedFindings[sourceURL];
                const groupId = `secretGroup${groupIndex}`;
                const collapseId = `collapse${groupIndex}`;
                
                // Sort findings by severity within each group
                findings.sort((a, b) => {
                    const severityOrder = { 'CRITICAL': 0, 'HIGH': 1, 'MEDIUM': 2, 'LOW': 3 };
                    const aSeverity = (a.severity || '').toUpperCase();
                    const bSeverity = (b.severity || '').toUpperCase();
                    
                    const aOrder = severityOrder[aSeverity] !== undefined ? severityOrder[aSeverity] : 4;
                    const bOrder = severityOrder[bSeverity] !== undefined ? severityOrder[bSeverity] : 4;
                    
                    return aOrder - bOrder;
                });
                
                // Calculate severity stats for this group - use snake_case from JSON tags
                const severityStats = {
                    high: findings.filter(f => {
                        const severity = f.severity || f.Severity || '';
                        return severity === 'HIGH' || severity === 'CRITICAL';
                    }).length,
                    medium: findings.filter(f => {
                        const severity = f.severity || f.Severity || '';
                        return severity === 'MEDIUM';
                    }).length,
                    low: findings.filter(f => {
                        const severity = f.severity || f.Severity || '';
                        return severity === 'LOW';
                    }).length,
                    unknown: findings.filter(f => {
                        const severity = f.severity || f.Severity || '';
                        return !severity || !['HIGH', 'CRITICAL', 'MEDIUM', 'LOW'].includes(severity);
                    }).length
                };

                // Create severity badges
                let severityBadges = '';
                if (severityStats.high > 0) {
                    severityBadges += `<span class="badge bg-danger">${severityStats.high} High</span>`;
                }
                if (severityStats.medium > 0) {
                    severityBadges += `<span class="badge bg-warning">${severityStats.medium} Medium</span>`;
                }
                if (severityStats.low > 0) {
                    severityBadges += `<span class="badge bg-info">${severityStats.low} Low</span>`;
                }
                if (severityStats.unknown > 0) {
                    severityBadges += `<span class="badge bg-secondary">${severityStats.unknown} Unknown</span>`;
                }

                accordionHTML += `
                    <div class="mb-2">
                        <div class="secret-group-header">
                            <button class="btn collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#${collapseId}" 
                                    aria-expanded="false" aria-controls="${collapseId}">
                                <div class="d-flex align-items-center justify-content-between w-100">
                                    <div class="d-flex align-items-center flex-grow-1">
                                        <i class="fas fa-chevron-down collapse-icon me-3"></i>
                                        <span class="secret-group-url me-auto">${escapeHtml(sourceURL)}</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <span class="secret-group-count">${findings.length} secrets</span>
                                        <div class="secret-group-severity-badges">
                                            ${severityBadges}
                                        </div>
                                    </div>
                                </div>
                            </button>
                        </div>
                        <div id="${collapseId}" class="collapse" data-bs-parent="#secretFindingsAccordion">
                            <div class="secret-findings-table-container">
                                <table class="table table-hover secret-findings-table">
                                    <thead>
                                        <tr>
                                            <th><i class="fas fa-tag me-1"></i>Rule ID</th>
                                            <th><i class="fas fa-info me-1"></i>Description</th>
                                            <th><i class="fas fa-exclamation-triangle me-1"></i>Severity</th>
                                            <th><i class="fas fa-key me-1"></i>Secret</th>
                                            <th><i class="fas fa-list-ol me-1"></i>Line</th>
                                            <th><i class="fas fa-tools me-1"></i>Tool</th>
                                            <th><i class="fas fa-clock me-1"></i>Timestamp</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                `;

                findings.forEach(finding => {
                    const severity = finding.severity || finding.Severity || '';
                    const severityClass = getSeverityClass(severity);
                    const severityIcon = getSeverityIcon(severity);
                    const formattedTimestamp = formatTimestamp(finding.timestamp || finding.Timestamp);
                    
                    accordionHTML += `
                        <tr class="${severityClass}">
                            <td><code class="bg-light px-2 py-1 rounded">${escapeHtml(finding.rule_id || finding.RuleID || '')}</code></td>
                            <td class="truncate-description" title="${escapeHtml(finding.description || finding.Description || '')}">${escapeHtml(finding.description || finding.Description || '')}</td>
                            <td>
                                <span class="badge ${getSeverityBadgeClass(severity)}">
                                    ${severityIcon}
                                    ${escapeHtml(severity || 'UNKNOWN')}
                                </span>
                            </td>
                            <td class="secret-text-cell">
                                ${(finding.secret_text || finding.SecretText) ? 
                                    `<span class="secret-text-display" 
                                           data-full-secret="${escapeHtml(finding.secret_text || finding.SecretText)}"
                                           data-tooltip="secret">
                                        ${escapeHtml(finding.secret_text || finding.SecretText)}
                                    </span>` : 
                                    '<span class="text-muted">-</span>'
                                }
                            </td>
                            <td>${(finding.line_number || finding.LineNumber) ? `<span class="badge bg-secondary">${finding.line_number || finding.LineNumber}</span>` : '<span class="text-muted">-</span>'}</td>
                            <td>${(finding.tool_name || finding.ToolName) ? `<span class="badge bg-primary">${escapeHtml(finding.tool_name || finding.ToolName)}</span>` : '<span class="text-muted">-</span>'}</td>
                            <td><small class="text-muted">${formattedTimestamp}</small></td>
                        </tr>
                    `;
                });

                accordionHTML += `
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                `;

                groupIndex++;
            });

            accordionContainer.innerHTML = accordionHTML;
        }

        function getSeverityClass(severity) {
            if (!severity) return 'table-secondary';
            const sev = severity.toUpperCase();
            if (sev === 'HIGH' || sev === 'CRITICAL') return 'table-danger';
            if (sev === 'MEDIUM') return 'table-warning';
            if (sev === 'LOW') return 'table-info';
            return 'table-secondary';
        }

        function getSeverityBadgeClass(severity) {
            if (!severity) return 'bg-secondary';
            const sev = severity.toUpperCase();
            if (sev === 'HIGH' || sev === 'CRITICAL') return 'bg-danger';
            if (sev === 'MEDIUM') return 'bg-warning';
            if (sev === 'LOW') return 'bg-info';
            return 'bg-secondary';
        }

        function getSeverityIcon(severity) {
            if (!severity) return '<i class="fas fa-question-circle me-1"></i>';
            const sev = severity.toUpperCase();
            if (sev === 'HIGH' || sev === 'CRITICAL') return '<i class="fas fa-exclamation-triangle me-1"></i>';
            if (sev === 'MEDIUM') return '<i class="fas fa-exclamation-circle me-1"></i>';
            if (sev === 'LOW') return '<i class="fas fa-info-circle me-1"></i>';
            return '<i class="fas fa-question-circle me-1"></i>';
        }

        function formatTimestamp(timestamp) {
            if (!timestamp) return '-';
            try {
                const date = new Date(timestamp);
                return date.toLocaleString('en-GB', {
                    year: 'numeric',
                    month: '2-digit',
                    day: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            } catch (e) {
                return timestamp;
            }
        }

        function escapeHtml(text) {
            if (!text) return '';
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        // Add tooltip functionality
        function createTooltip() {
            const tooltip = document.createElement('div');
            tooltip.id = 'secret-tooltip';
            tooltip.style.cssText = `
                position: absolute;
                background: #2c3e50;
                color: white;
                padding: 8px 12px;
                border-radius: 4px;
                font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
                font-size: 11px;
                max-width: 400px;
                word-break: break-all;
                white-space: pre-wrap;
                z-index: 10000;
                pointer-events: none;
                box-shadow: 0 2px 8px rgba(0,0,0,0.15);
                border: 1px solid #34495e;
                opacity: 0;
                transition: opacity 0.2s ease;
            `;
            document.body.appendChild(tooltip);
            return tooltip;
        }

        let tooltip = null;

        function showTooltip(element, event) {
            const fullText = element.getAttribute('data-full-secret');
            console.log('showTooltip called with:', fullText);
            console.log('Text length:', fullText ? fullText.length : 'null');
            
            if (!fullText || fullText.length <= 20) {
                console.log('Not showing tooltip - text too short or missing');
                return;
            }

            if (!tooltip) {
                console.log('Creating new tooltip');
                tooltip = createTooltip();
            }

            console.log('Showing tooltip with text:', fullText.substring(0, 100) + '...');
            tooltip.textContent = fullText;
            tooltip.style.display = 'block';
            tooltip.style.opacity = '1';
            
            // Position tooltip
            const rect = element.getBoundingClientRect();
            
            let left = event.pageX + 15;
            let top = event.pageY - 10;
            
            // Wait for tooltip to be rendered to get accurate dimensions
            setTimeout(() => {
                const tooltipRect = tooltip.getBoundingClientRect();
                
                // Adjust if tooltip would go off screen
                if (left + tooltipRect.width > window.innerWidth) {
                    left = event.pageX - tooltipRect.width - 15;
                }
                if (top - tooltipRect.height < 0) {
                    top = event.pageY + 25;
                }
                
                tooltip.style.left = left + 'px';
                tooltip.style.top = top + 'px';
                
                console.log('Tooltip positioned at:', left, top);
            }, 10);
        }

        function hideTooltip() {
            if (tooltip) {
                tooltip.style.opacity = '0';
                setTimeout(() => {
                    if (tooltip) tooltip.style.display = 'none';
                }, 200);
            }
        }

        function moveTooltip(event) {
            if (tooltip && tooltip.style.opacity === '1') {
                const tooltipRect = tooltip.getBoundingClientRect();
                
                let left = event.pageX + 10;
                let top = event.pageY - 10;
                
                if (left + tooltipRect.width > window.innerWidth) {
                    left = event.pageX - tooltipRect.width - 10;
                }
                if (top - tooltipRect.height < 0) {
                    top = event.pageY + 20;
                }
                
                tooltip.style.left = left + 'px';
                tooltip.style.top = top + 'px';
            }
        }

        // Event delegation for tooltips
        document.addEventListener('mouseover', function(e) {
            const element = e.target.closest('.secret-text-display');
            if (element) {
                console.log('Hovering over secret element:', element);
                console.log('Full secret data:', element.getAttribute('data-full-secret'));
                showTooltip(element, e);
            }
        });

        document.addEventListener('mouseout', function(e) {
            const element = e.target.closest('.secret-text-display');
            if (element) {
                console.log('Mouse out from secret element');
                hideTooltip();
            }
        });

        document.addEventListener('mousemove', function(e) {
            const element = e.target.closest('.secret-text-display');
            if (element && tooltip && tooltip.style.opacity === '1') {
                moveTooltip(e);
            }
        });
    </script>
</body>
</html> 